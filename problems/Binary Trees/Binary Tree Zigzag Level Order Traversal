class Solution {
    public void helper(TreeNode root,List<List<Integer>> res)
    {
        if(root==null) return ;
        Queue<TreeNode> que=new LinkedList<>();
        boolean flag=false;
        que.add(root);
        while(!que.isEmpty())
        {
            List<Integer> list=new ArrayList<>();
            int n=que.size();
            for(int i=0;i<n;i++)
            {
                TreeNode top=que.poll();
                list.add(top.val);
                if(top.left!=null) que.offer(top.left);
                if(top.right!=null) que.offer(top.right);
            }
            if(flag)
            {
                Collections.reverse(list);
            }
            res.add(list);
            flag=!flag;
        }

    }
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<>();
        helper(root,res);
        return res;
    }
}
