import java.util.*;
public class Solution {
    public static void inorder(TreeNode root,List<Integer> list)
    {
        if(root==null) return;
        inorder(root.left,list);
        list.add(root.data);
        inorder(root.right,list);
    }
    public static void preOrder(TreeNode root,List<Integer> list)
    {
        if(root==null) return;
        list.add(root.data);
        preOrder(root.left,list);
        preOrder(root.right,list);
    }
    public static void postOrder(TreeNode root,List<Integer> list)
    {
        if(root==null) return;
        postOrder(root.left,list);
        postOrder(root.right,list);
        list.add(root.data);
    }
    public static List<List<Integer>> getTreeTraversal(TreeNode root) {
        // Write your code here.
        List<List<Integer>> res= new ArrayList<>();

        List<Integer> l1= new ArrayList<>();
        inorder(root,l1);
        res.add(l1);

        List<Integer> l2= new ArrayList<>();
        preOrder(root,l2);
        res.add(l2);

        List<Integer> l3= new ArrayList<>();
        postOrder(root,l3);
        res.add(l3);
        
        return res;
    }
}
