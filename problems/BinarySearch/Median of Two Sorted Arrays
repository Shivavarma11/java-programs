class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n1=nums1.length;
        int n2=nums2.length;
        int n=n1+n2;
        int idx2=n/2;
        int idx1=idx2-1;
        int cnt=0;
        int p1=0,p2=0;
        int idx1el=Integer.MIN_VALUE;
        int idx2el=Integer.MIN_VALUE;

        while(p1<n1 && p2<n2)
        {
            if(nums1[p1]<nums2[p2])
            {
                
                if(cnt==idx1) idx1el=nums1[p1];
                if(cnt==idx2) idx2el=nums1[p1];
                cnt++;
                p1++;
                if(idx1el!=Integer.MIN_VALUE && idx2el!=Integer.MIN_VALUE)
                {
                    break;
                }
            }
            else
            {
                
                if(cnt==idx1) idx1el=nums2[p2];
                if(cnt==idx2) idx2el=nums2[p2];
                cnt++;
                p2++;
                if(idx1el!=Integer.MIN_VALUE && idx2el!=Integer.MIN_VALUE)
                {
                    break;
                }

            }
            

        }
        while(p1<n1)
        {
            
            if(cnt==idx1) idx1el=nums1[p1];
            if(cnt==idx2) idx2el=nums1[p1];
            cnt++;
            p1++;
            if(idx1el!=Integer.MIN_VALUE && idx2el!=Integer.MIN_VALUE)
            {
                break;
            }
        }
        while(p2<n2)
        {
            
            if(cnt==idx1) idx1el=nums2[p2];
            if(cnt==idx2) idx2el=nums2[p2];
            cnt++;
            p2++;
            if(idx1el!=Integer.MIN_VALUE && idx2el!=Integer.MIN_VALUE)
            {
                break;
            }
        }
        if(n%2==0)
        {
            return (double)(idx1el+idx2el)/2;
        }
        else
        {
            return (double)(idx2el);
        }
        
    }
}
