class Solution {
    private int findK(int[] arr,int n)
    {
        int k=-1;
        int min=Integer.MAX_VALUE;
        int low=0;
        int high=n-1;
        if(arr[low]<=arr[high])
        {
             return low;
        }
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            
            if(arr[low]<=arr[mid])
            {
                if(arr[low]<=min)
                {
                    min=arr[low];
                    k=low;
                }
                
                low=mid+1;
            }
            else
            {
                if(arr[mid]<=min)
                {
                    min=arr[mid];
                    k=mid;
                }
                
                high=mid-1;
            }
        }
        return k;
        
    }
    int findKRotation(int arr[], int n) {
        return findK(arr,n);
    }
}
