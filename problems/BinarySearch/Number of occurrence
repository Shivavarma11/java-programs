 class Solution {
    private int getFirst(int[] arr,int n,int x)
    {
        int first=-1;
        int low=0;
        int high=n-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(arr[mid]==x)
            {
                first=mid;
                high=mid-1;
            }
            else if(arr[mid]<x)
            {
                low=mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        return first;
    }
    private int getSecond(int[] arr,int n,int x)
    {
        int sec=-1;
        int low=0;
        int high=n-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(arr[mid]==x)
            {
                sec=mid;
                low=mid+1;
            }
            else if(arr[mid]<x)
            {
                low=mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        return sec;
    }
    int count(int[] arr, int n, int x) {
        // code here
        int first=getFirst(arr,n,x);
        if(first==-1)
        {
            return 0;
        }
        int second=getSecond(arr,n,x);
        return second-first+1;
    }
}
