class Solution
{
    public long find(long mid,int n,int m)
    {
        long ans=1;
        for(int i=1;i<=n;i++)
        {
            ans*=mid;
            if(ans>m) return 2;
        }
        if(ans==m) return 1;
        return 0;
    }
    public int findNthRoot(int n,int m)
    {
        int low=1;
        int high=m;
        
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            long midN=find(mid,n,m);
            if(midN==1)
            {
                return (int)mid;
            }
            else if(midN==2)
            {
                high=(int)mid-1;
            }
            else
            {
                low=(int)mid+1;
            }
        }
        return -1;
    }
    public int NthRoot(int n, int m)
    {
         
        return findNthRoot(n,m);
    }
}
