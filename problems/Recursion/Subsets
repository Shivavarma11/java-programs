class Solution {
    // public void findSubset(int i,int[] nums,List<List<Integer>> res,List<Integer> list,int n)
    // {
    //     if(i==n)
    //     {
            
    //         res.add(new ArrayList<>(list));
    //         return;
    //     }
        
    //     findSubset(i+1,nums,res,list,n);
    //     list.add(nums[i]);   
    //     findSubset(i+1,nums,res,list,n);
    //     list.remove(list.size()-1);
         
        
    // }
    public void powerSet(int[] nums,List<List<Integer>> ans)
    {
        int n=nums.length;
        
        for(int num=0;num<(1<<n);num++)
        {
            List<Integer> list=new ArrayList<>();
            for(int i=0;i<n;i++)
            {
                if((num&(1<<i))!=0)
                {
                    list.add(nums[i]);
                }
            }
            ans.add(list);
        }
    }
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res=new ArrayList<>();
        // List<Integer> list=new ArrayList<>();
        // int n=nums.length;
        // findSubset(0,nums,res,list,n);
        powerSet(nums,res);
        return res;
        
    }
}
