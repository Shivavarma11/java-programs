
class Solution {
    public void dfs(int i,int j,String ans,int[][] mat,int[][] vis,ArrayList<String> res,int n,int[] di,int[] dj)
    {
        if(i==n-1 && j==n-1)
        {
            res.add(ans);
            return;
        }
        String dir="DLRU";
        for(int idx=0;idx<4;idx++)
        {
            int nexti=i+di[idx];
            int nextj=j+dj[idx];
            if(nexti>=0 && nexti<n && nextj>=0 && nextj<n && vis[nexti][nextj]==0 && mat[nexti][nextj]==1)
            {
                vis[i][j]=1;
                dfs(nexti,nextj,ans+dir.charAt(idx),mat,vis,res,n,di,dj);
                vis[i][j]=0;
            }
        }
        // if(i+1<n && vis[i+1][j]==0 && mat[i+1][j]==1)
        // {
        //     vis[i][j]=1;
        //     dfs(i+1,j,ans+"D",mat,vis,res,n);
        //     vis[i][j]=0;
            
        // }
        // if(j-1>=0 && vis[i][j-1]==0 && mat[i][j-1]==1)
        // {
        //     vis[i][j]=1;
        //     dfs(i,j-1,ans+"L",mat,vis,res,n);
        //     vis[i][j]=0;
            
        // }
        // if(j+1<n && vis[i][j+1]==0 && mat[i][j+1]==1)
        // {
        //     vis[i][j]=1;
        //     dfs(i,j+1,ans+"R",mat,vis,res,n);
        //     vis[i][j]=0;
            
        // }
        // if(i-1>=0 && vis[i-1][j]==0 && mat[i-1][j]==1)
        // {
        //     vis[i][j]=1;
        //     dfs(i-1,j,ans+"U",mat,vis,res,n);
        //     vis[i][j]=0;
            
        // }
    }
    public ArrayList<String> findPath(int[][] mat) {
        // Your code here
        ArrayList<String> res=new ArrayList<>();
        int n=mat.length;
        int[][] vis=new int[n][n];
        int[] di={1,0,0,-1};
        int[] dj={0,-1,1,0};
        if(mat[0][0]==1)
        {
            dfs(0,0,"",mat,vis,res,n,di,dj);
        }
        else
        {
            res.add("-1");
        }
        return res;
    }
}
