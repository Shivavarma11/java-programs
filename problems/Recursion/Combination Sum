class Solution {
    public List<List<Integer>>  find(int idx,int sum,int tar,int[] arr,int n,List<Integer> list,List<List<Integer>> res)
    {
        //if(tar<0) return res;
        if(sum>tar) return res;
        if(idx==n)
        {
            if(sum==tar)
            {
                res.add(new ArrayList<>(list));
                
            }
            return res;
        }
        list.add(arr[idx]);
        sum+=arr[idx];
        find(idx,sum,tar,arr,n,list,res);
        list.remove(list.size()-1);
        sum-=arr[idx];
        find(idx+1,sum,tar,arr,n,list,res);
        return res;
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res=new ArrayList<>();
        List<Integer> list=new ArrayList<>();
        int n=candidates.length;
        return find(0,0,target,candidates,n,list,res);
        
        
    }
}
