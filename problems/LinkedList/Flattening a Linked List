 class Solution {
    // Function to flatten a linked list
    public Node merge(Node t1,Node t2)
    {
        Node dummy=new Node(-1);
        Node res=dummy;
        while(t1!=null && t2!=null)
        {
            if(t1.data<t2.data)
            {
                res.bottom=t1;
                res=res.bottom;
                t1=t1.bottom;
            }
            else
            {
                res.bottom=t2;
                res=res.bottom;
                t2=t2.bottom;
            }
            res.next=null;
        }
        if(t1!=null)
        {
            res.bottom=t1;
        }
        else
        {
            res.bottom=t2;
        }
        return dummy.bottom;
    }
    Node flatten(Node root) {
        // code here
        if(root==null || root.next==null)
        {
            return root;
        }
        Node mh=flatten(root.next);
        return merge(root,mh);
    }
}
