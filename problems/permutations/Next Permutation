class Solution {
    private static void reverse(int[] nums,int p1,int p2)
    {
        while(p1<p2)
        {
            int temp=nums[p1];
            nums[p1]=nums[p2];
            nums[p2]=temp;
            p1++;
            p2--;
        }
        
    }
    public int[] nextPermutation(int[] nums) {
        
        int n=nums.length;
        int idx=-1;
        for(int i=n-2;i>=0;i--)
        {
            if(nums[i]<nums[i+1])
            {
                idx=i;
                break;
            }
        }
        if(idx==-1)
        {
            reverse(nums,0,n-1); 
            return nums;          
        }
        int id=-1;
        for(int i=n-1;i>=0;i--)
        {
            if(nums[i]>nums[idx])
            {
                id=i;
                break;
            }
        }
        int temp=nums[idx];
        nums[idx]=nums[id];
        nums[id]=temp;
        reverse(nums,idx+1,n-1);
        return nums;

    }
}
