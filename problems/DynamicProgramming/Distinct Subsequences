class Solution {
    public int find(int i,int j,String s,String t,int[][] dp)
    {
        if(j<0) return 1;
        if(i<0) return 0;
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        if(s.charAt(i)==t.charAt(j))
        {
            return dp[i][j]=find(i-1,j-1,s,t,dp)+find(i-1,j,s,t,dp);
        }
        return dp[i][j]=find(i-1,j,s,t,dp);
    }
    //static int prime = (int) (Math.pow(10, 9) + 7);
    public int numDistinct(String s, String t) {
        int n=s.length();
        int m=t.length();
        //int[][] dp=new int[n+1][m+1];
        // for(int[] arr:dp)
        // {
        //     Arrays.fill(arr,-1);
        // }
        int[] prev=new int[m+1];
        int[] curr=new int[m+1];

      
        for(int j=1;j<=m;j++) prev[j]=0;

        for(int i=1;i<=n;i++)
        {
            prev[0]=1;
            for(int j=1;j<=m;j++)
            {
                if(s.charAt(i-1)==t.charAt(j-1))
                {
                    curr[j]=prev[j-1]+prev[j];//%prime;
                }
                else
                {
                    curr[j]=prev[j];
                }
            }
            prev=(int[])curr.clone();
        }
        return prev[m]; 

    }
        
}
