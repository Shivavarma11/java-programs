class Solution {
    public int find(int i,int n,int buy,int[] prices,int[][] dp)
    {
        if(i==n)
        {
            return 0;
        }
        if(dp[i][buy]!=-1) return dp[i][buy];
        int profit=0;
        if(buy==1)
        {
            profit=Math.max(-prices[i]+find(i+1,n,0,prices,dp),0+find(i+1,n,1,prices,dp));
        }
        else
        {
            profit=Math.max(prices[i]+find(i+1,n,1,prices,dp),0+find(i+1,n,0,prices,dp));
        }
        return dp[i][buy]=profit;
    }
    public int maxProfit(int[] prices) {
        int n=prices.length;
        int[][] dp=new int[n][2];
        for(int[] arr:dp)
        {
            Arrays.fill(arr,-1);
        }
        return find(0,n,1,prices,dp);
    }
}
