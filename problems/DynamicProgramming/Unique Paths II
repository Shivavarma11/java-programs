class Solution {
    public int find(int r,int c,int[][] grid,int[][] dp)
    {
        if(r>=0 && c>=0 && grid[r][c]==1) return 0;
        if(r==0 && c==0) return 1;
        if(r<0 || c<0) return 0;
        if(dp[r][c]!=-1) return dp[r][c];
        int up=find(r-1,c,grid,dp);
        int left=find(r,c-1,grid,dp);
        return dp[r][c]=up+left;
    }
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int n=obstacleGrid.length;
        int m=obstacleGrid[0].length;
        int[][] dp=new int[n][m];
        for(int[] arr:dp)
        {
            Arrays.fill(arr,-1);
        }
        return find(n-1,m-1,obstacleGrid,dp);
    }
}
