class Solution {
    public int find(int i,int j,String s,String t,int[][] dp)
    {
        if(i<0) return j+1;
        if(j<0) return i+1;
        if(dp[i][j]!=-1) return dp[i][j];
        if(s.charAt(i)==t.charAt(j))
        {
            return dp[i][j]=find(i-1,j-1,s,t,dp);
        }
        return dp[i][j]=1+Math.min(find(i,j-1,s,t,dp),Math.min(find(i-1,j,s,t,dp),find(i-1,j-1,s,t,dp)));
    }
    public int minDistance(String word1, String word2) {
        int n=word1.length();
        int m=word2.length();
        int[][] dp=new int[n][m];
        for(int[] arr:dp)
        {
            Arrays.fill(arr,-1);
        }
        return find(n-1,m-1,word1,word2,dp);
        
    }
}
