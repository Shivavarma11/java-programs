class Solution {
    public void dfs(int r,int c,int[][] grid,int[][] vis,int n,int m,int[] delrow,int[] delcol)
    {
        vis[r][c]=1;
        for(int i=0;i<4;i++)
        {
            int nrow=r+delrow[i];
            int ncol=c+delcol[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && grid[nrow][ncol]==1 && vis[nrow][ncol]==0)
            {
                dfs(nrow,ncol,grid,vis,n,m,delrow,delcol);
            }
        }
    }
    public int numEnclaves(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        int[][] vis=new int[n][m];
        int[] delrow={-1,0,1,0};
        int[] delcol={0,1,0,-1};
        for(int i=0;i<n;i++)
        {
            if(grid[i][0]==1 && vis[i][0]==0)
            {
                dfs(i,0,grid,vis,n,m,delrow,delcol);
            }
            if(grid[i][m-1]==1 && vis[i][m-1]==0)
            {
                dfs(i,m-1,grid,vis,n,m,delrow,delcol);
            }
        }
        for(int j=0;j<m;j++)
        {
            if(grid[0][j]==1 && vis[0][j]==0)
            {
                dfs(0,j,grid,vis,n,m,delrow,delcol);
            }
            if(grid[n-1][j]==1 && vis[n-1][j]==0)
            {
                dfs(n-1,j,grid,vis,n,m,delrow,delcol);
            }
        }
        int cnt=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1 && vis[i][j]==0)
                {
                    cnt++;
                }
            }
        }

        return cnt;
    }
}
